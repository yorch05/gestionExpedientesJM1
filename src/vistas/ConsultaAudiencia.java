/*
 * ConsultaAudiencia.java
 *
 * Created on 30 de octubre de 2009, 10:35
 */

package vistas;

import facades.AudienciaFacade;
import entidades.Audiencia;
import includes.Constructor;
import java.awt.print.PrinterException;
import java.io.File;
import java.net.URL;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable.PrintMode;

/**
 *
 * @author  Yorch
 */
public class ConsultaAudiencia extends javax.swing.JFrame {
    private String atributo = "";
    private int type = -1;
    private Date fecActual;
    private SimpleDateFormat fechaActual;
    private String actual;
    private String fecha[];
    public static Object celdas[][] = {};
    private String[] titulosAudiencia = {"Expte", "cria/uj", "Menor", "Fecha", "Hora", "Alojado"};
    /** Creates new form ConsultaAudiencia */
    public ConsultaAudiencia(int tipo) {
        initComponents();
        inicializarComponentes(tipo);
    }

    private void setearFecha() {
        Calendar calendario = GregorianCalendar.getInstance();
        fecActual = new Date();
        fecActual = calendario.getTime();
        fechaActual = new SimpleDateFormat("dd/MM/yy");
        actual = fechaActual.format(fecActual);
        convertirFechaActual(actual);
    }
    
    private void convertirFechaActual(String fecha) {
        try {
            fecActual = new Date();
            fechaActual = new SimpleDateFormat("dd/MM/yy");
            fecActual = fechaActual.parse(fecha);
        } catch (ParseException ex) {
            Logger.getLogger(ConsultaAudiencia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //despues de haber realizado cualquier busqueda, los botones vuelven a sus estados iniciales  
    private void modificarToggleButtons() {
        jToggleButton1.setEnabled(true);
        jToggleButton2.setEnabled(true);
        jToggleButton3.setEnabled(true);
        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        jToggleButton1.setSelected(false);
        jToggleButton2.setSelected(false);
        jToggleButton3.setSelected(false);
        jToggleButton4.setSelected(false);
        jToggleButton5.setSelected(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Audiencias");
        setBounds(new java.awt.Rectangle(10, 10, 10, 10));
        setForeground(new java.awt.Color(153, 153, 225));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/help_16.png"))); // NOI18N
        jButton2.setText("?");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudarConsultaAud(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Consultar audiencia"));

        jToggleButton1.setText("Por menor");
        jToggleButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elegirBusqueda(evt);
            }
        });

        jToggleButton2.setText("Por N°Expte.");
        jToggleButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elegirBusqueda(evt);
            }
        });

        jToggleButton3.setText("Por día");
        jToggleButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elegirBusqueda(evt);
            }
        });

        jToggleButton4.setText("Por mes");
        jToggleButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elegirBusqueda(evt);
            }
        });

        jToggleButton5.setText("Por fecha");
        jToggleButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elegirBusqueda(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarAudiencia(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                habilitarBoton(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/search_16.png"))); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarAudiencia(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Expte", "cria/uj", "Menor", "Fecha", "Hora", "Alojado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(120);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(120);
        jTable1.getColumnModel().getColumn(1).setMinWidth(70);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(30);
        jTable1.getColumnModel().getColumn(3).setMinWidth(100);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(4).setMinWidth(70);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(70);
        jTable1.getColumnModel().getColumn(5).setMinWidth(60);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(60);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton4)
                    .addComponent(jToggleButton3)
                    .addComponent(jToggleButton1)
                    .addComponent(jToggleButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/clipboard_16.png"))); // NOI18N
        jButton3.setText("Mostrar Hoy");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarHoy(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/monitor_16.png"))); // NOI18N
        jButton4.setText("Mostrar Todos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarAudiencias(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/print_16.png"))); // NOI18N
        jButton5.setText("Imprimir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirTabla(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(665, Short.MAX_VALUE)
                .addComponent(jButton2))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(359, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void elegirBusqueda(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elegirBusqueda
    if(evt.getSource().equals(jToggleButton1)) {
        if(jToggleButton1.isSelected()) {
            jTextField1.setText("");
            jToggleButton2.setEnabled(false);
            jToggleButton3.setEnabled(false);
            jToggleButton4.setEnabled(false);
            jToggleButton5.setEnabled(false);
            jTextField1.setEnabled(true);jTextField1.grabFocus();
            atributo = "menor";
        } else {
            jTextField1.setText("");
            jToggleButton2.setEnabled(true);
            jToggleButton3.setEnabled(true);
            jToggleButton4.setEnabled(true);
            jToggleButton5.setEnabled(true);
            jTextField1.setEnabled(false);
        }
    }
    else if(evt.getSource().equals(jToggleButton2)) {
        if(jToggleButton2.isSelected()) {
            jTextField1.setText("");
            jToggleButton1.setEnabled(false);
            jToggleButton3.setEnabled(false);
            jToggleButton4.setEnabled(false);
            jToggleButton5.setEnabled(false);
            jTextField1.setEnabled(true);jTextField1.grabFocus();
            atributo = "nro_expte";
        } else {
            jTextField1.setText("");
            jToggleButton1.setEnabled(true);
            jToggleButton3.setEnabled(true);
            jToggleButton4.setEnabled(true);
            jToggleButton5.setEnabled(true);
            jTextField1.setEnabled(false);
        }
    }
    else if(evt.getSource().equals(jToggleButton3)) {
        if(jToggleButton3.isSelected()) {
            jTextField1.setText("");
            jToggleButton1.setEnabled(false);
            jToggleButton2.setEnabled(false);
            jToggleButton4.setEnabled(false);
            jToggleButton5.setEnabled(false);
            jTextField1.setEnabled(true);jTextField1.grabFocus();
            atributo = "día";
        } else {
            jTextField1.setText("");
            jToggleButton1.setEnabled(true);
            jToggleButton2.setEnabled(true);
            jToggleButton4.setEnabled(true);
            jToggleButton5.setEnabled(true);
            jTextField1.setEnabled(false);
        }
    }
    else if(evt.getSource().equals(jToggleButton4)) {
        if(jToggleButton4.isSelected()) {
            jTextField1.setText("");
            jToggleButton1.setEnabled(false);
            jToggleButton2.setEnabled(false);
            jToggleButton3.setEnabled(false);
            jToggleButton5.setEnabled(false);
            jTextField1.setEnabled(true);jTextField1.grabFocus();
            atributo = "mes";
        } else {
            jTextField1.setText("");
            jToggleButton1.setEnabled(true);
            jToggleButton2.setEnabled(true);
            jToggleButton3.setEnabled(true);
            jToggleButton5.setEnabled(true);
            jTextField1.setEnabled(false);
        }
    }
    else if(evt.getSource().equals(jToggleButton5)) {
        if(jToggleButton5.isSelected()) {
            jTextField1.setText("");
            jToggleButton1.setEnabled(false);
            jToggleButton2.setEnabled(false);
            jToggleButton3.setEnabled(false);
            jToggleButton4.setEnabled(false);
            jTextField1.setEnabled(true);jTextField1.grabFocus();
            atributo = "fecha";
        } else {
            jTextField1.setText("");
            jToggleButton1.setEnabled(true);
            jToggleButton2.setEnabled(true);
            jToggleButton3.setEnabled(true);
            jToggleButton4.setEnabled(true);
            jTextField1.setEnabled(false);
        }
    }
}//GEN-LAST:event_elegirBusqueda

private void ayudarConsultaAud(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudarConsultaAud
    try {
        // Carga el fichero de ayuda
        File fichero = new File("help/help_set.hs");
        URL hsURL = fichero.toURI().toURL();
        // Crea el HelpSet y el HelpBroker
        HelpSet helpset = new HelpSet(getClass().getClassLoader(), hsURL);
        HelpBroker hb = helpset.createHelpBroker();
        // Pone ayuda a boton "?"
        hb.enableHelpOnButton(jButton2, "inicio", helpset);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, e.toString(), "Excepcion", JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_ayudarConsultaAud

private void habilitarBoton(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_habilitarBoton
    jButton1.setEnabled(true);
    if (jTextField1.getText().equals("")) {
        jButton1.setEnabled(false);
    }
}//GEN-LAST:event_habilitarBoton

private void buscarAudiencia(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarAudiencia
    AudienciaFacade audienciaFacade = new AudienciaFacade();
    List<Audiencia> listaAudiencias = new ArrayList();
    SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/aa");
    if (atributo.equals("menor")) {
        if (type == 1) { //verifico a qué secretaría pertenece la audiencia. 1=Secretaría Penal; 2=Secretaría Asistencial
            listaAudiencias = audienciaFacade.buscarAudienciaPorParametro("a.menor", jTextField1.getText(), "Penal");
        } else {
            listaAudiencias = audienciaFacade.buscarAudienciaPorParametro("a.menor", jTextField1.getText(), "Asistencial");
        }
    } else if (atributo.equals("nro_expte")) {
        if (type == 1) { //1=Secretaría Penal; 2=Secretaría Asistencial
            listaAudiencias = audienciaFacade.buscarAudienciaPorParametro("a.expte", jTextField1.getText(), "Penal");
        } else {
            listaAudiencias = audienciaFacade.buscarAudienciaPorParametro("a.expte", jTextField1.getText(), "Asistencial");
        }
    } else if (atributo.equals("día")) {
        if (1 <= Integer.valueOf(jTextField1.getText()) && Integer.valueOf(jTextField1.getText()) <= 31) {
            List<Audiencia> audiencias = new ArrayList(); //arreglo de audiencias que concuerden con el parámetro buscado
            if (type == 1) {
                listaAudiencias = audienciaFacade.getAudienciasPenales();
            } else {
                listaAudiencias = audienciaFacade.getAudienciasAsistenciales();
            }
            for (Audiencia audiencia : listaAudiencias) {
                String fechaTexto = formatoFecha.format(audiencia.getFechaAudiencia()); //obtengo fechas, las convierto en texto
                String[] partes = fechaTexto.split("/"); //divido en partes que la componen
                if (partes[0].equals(jTextField1.getText())) { //comparo si el día del objeto de la lista es = al que se busca
                    audiencias.add(audiencia); //lo agrego a la lista que será mostrada
                }
            }
            listaAudiencias.clear();
            listaAudiencias = audiencias;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Valor de día incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else if (atributo.equals("mes")) {
        if (1 <= Integer.valueOf(jTextField1.getText()) && Integer.valueOf(jTextField1.getText()) <= 12) {
            List<Audiencia> audiencias = new ArrayList();
            if (type == 1) {
                listaAudiencias = audienciaFacade.getAudienciasPenales();
            } else {
                listaAudiencias = audienciaFacade.getAudienciasAsistenciales();
            }

            for (Audiencia audiencia : listaAudiencias) {
                String fechaTexto = formatoFecha.format(audiencia.getFechaAudiencia()); //obtengo fechas, las convierto en texto
                String[] partes = fechaTexto.split("/"); //divido en partes que la componen
                if (partes[1].equals(jTextField1.getText())) { //comparo si el mes del objeto de la lista es = al que se busca
                    audiencias.add(audiencia); //lo agrego a la lista que será mostrada
                }
            }
            listaAudiencias.clear();
            listaAudiencias = audiencias;
        } else {
                JOptionPane.showMessageDialog(rootPane, "Valor de mes incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
            }   
        } else { //se busca por fecha
            listaAudiencias = audienciaFacade.buscarAudienciaPorFecha(jTextField1.getText(), "Penal");
        }
    if (!listaAudiencias.isEmpty()) { //si la lista no está vacía
        Constructor.cargarTabla(jTable1, 6, titulosAudiencia, "Audiencia", listaAudiencias);
    } else {
        JOptionPane.showMessageDialog(this, "No se encontró registros con ese parámetro de búsqueda.", "Resultado", JOptionPane.WARNING_MESSAGE);
    }
    modificarToggleButtons();
}//GEN-LAST:event_buscarAudiencia

private void mostrarAudiencias(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarAudiencias
    AudienciaFacade audienciaFacade = new AudienciaFacade();
    if(type == 1) { 
        if(audienciaFacade.getAudienciasPenales().isEmpty()){ //si la lista está vacía, emite mensaje
            JOptionPane.showMessageDialog(this, "No hay audiencias cargadas.", "Tabla vacía", JOptionPane.INFORMATION_MESSAGE);
        } else { //sino carga la tabla
            Constructor.cargarTabla(jTable1, 6, titulosAudiencia, "Audiencia", audienciaFacade.getAudienciasPenales());
        }
    } else {
        if(audienciaFacade.getAudienciasAsistenciales().isEmpty()){
            JOptionPane.showMessageDialog(this, "No hay audiencias cargadas.", "Tabla vacía", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Constructor.cargarTabla(jTable1, 6, titulosAudiencia, "Audiencia", audienciaFacade.getAudienciasAsistenciales());
        }
    }
}//GEN-LAST:event_mostrarAudiencias

private void mostrarHoy(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarHoy
    AudienciaFacade audienciaFacade = new AudienciaFacade();
    List<Audiencia> listaAudiencias = new ArrayList();
    List<Audiencia> audienciasHoy = new ArrayList();
    SimpleDateFormat fechaFormat = new SimpleDateFormat("dd/MM/aa");
    if( type == 1 ){ //si se cumple se trata de audiencias de secreataria penal
        if (!audienciaFacade.getAudienciasPenales().isEmpty()) {
            listaAudiencias = audienciaFacade.getAudienciasPenales();
            for (Audiencia audiencia: listaAudiencias) {
                String fechaTexto = fechaFormat.format(audiencia.getFechaAudiencia());
                if(fechaTexto.equals(jTextField1.getText())) {
                    audienciasHoy.add(audiencia);
                }
            }
            Constructor.cargarTabla(jTable1, 6, titulosAudiencia, "Audiencia", audienciasHoy);
        } else {
            JOptionPane.showMessageDialog(rootPane, "No hay audiencias agendadas.", "Resultado", JOptionPane.INFORMATION_MESSAGE);
        }
    } else { //audiencias de secretaria asistencial
        if (!audienciaFacade.getAudienciasAsistenciales().isEmpty()) {
            listaAudiencias = audienciaFacade.getAudienciasAsistenciales();
            for (Audiencia audiencia: listaAudiencias) {
                String fechaTexto = fechaFormat.format(audiencia.getFechaAudiencia());
                if(fechaTexto.equals(jTextField1.getText())) {
                    audienciasHoy.add(audiencia);
                }
            }
            Constructor.cargarTabla(jTable1, 6, titulosAudiencia, "Audiencia", audienciasHoy);
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se tienen audiencias para el día de hoy.", "Resultado", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}//GEN-LAST:event_mostrarHoy

private void imprimirTabla(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirTabla
    try {
        MessageFormat headerFormat = new MessageFormat(" AUDIENCIAS\n_________________\nSECRETARÍA PENAL-" + actual + "\n_____________________ ");
        MessageFormat footerFormat = new MessageFormat("- {0} -");
        jTable1.print(PrintMode.FIT_WIDTH, headerFormat, footerFormat);
    } catch (PrinterException pe) {

        JOptionPane.showMessageDialog(this, "Error al intentar imprimir. Verificar impresora.\n"+pe.getMessage(), "Operación fallida", JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_imprimirTabla

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes(int tipo) {
        this.setIconImage (new ImageIcon(getClass().getResource("/iconos/iconos16px/icon_16.png")).getImage());
        setearFecha();
        fecha = actual.split("/");
        jTextField1.setEnabled(false);
        jButton1.setEnabled(false);
        type = tipo;
        if(type == 2) {
            this.setTitle("Consulta de Audiencias - Sec. Asistencial");
        }
    }
}

