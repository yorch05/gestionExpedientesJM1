/*
 * Inicio.java
 *
 * Created on 17 de diciembre de 2009, 22:58
 */

package vistas;

import facades.UsuarioFacade;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author  Yorch
 */
public class Login extends javax.swing.JFrame {
    
    private boolean bandera = true;
    private int mod1,mod2,mod3,admin;
    private String pass;
    private UsuarioFacade usuarioFacade = new UsuarioFacade();
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

    /** Creates new form Login */
    public Login() {
        initComponents();
        inicializarComponentes();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Acceso al sistema");
        setBackground(new java.awt.Color(51, 51, 51));
        setIconImages(null);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Nombre de usuario");

        jLabel2.setText("Contrase√±a");

        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrarLabel(evt);
            }
        });

        jPasswordField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrarLabel(evt);
            }
        });
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Login.this.focusGained(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cleanLabel(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/tick_16.png"))); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarInicio(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/tick_16.png"))); // NOI18N
        jButton2.setText("Iniciar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarModulo(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/tick_16.png"))); // NOI18N
        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarAsistencial(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/tick_16.png"))); // NOI18N
        jButton4.setText("OK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarAsistencial2(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iconos16px/tick_16.png"))); // NOI18N
        jButton5.setText("OK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarSecretariaCivil(evt);
            }
        });

        jButton6.setText("X");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarInicio(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton5))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton2))))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void validarInicio(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarInicio
    validarInicioSesion();
}//GEN-LAST:event_validarInicio

private void focusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGained
    if (evt.getSource().equals(jTextField1)) {
        jLabel3.setText("");
    }
    if (evt.getSource().equals(jPasswordField1)) {
            if (bandera == true) {
                jPasswordField1.setText("");
                jPasswordField1.setForeground(Color.BLACK);
                bandera = false;
            }
        }
}//GEN-LAST:event_focusGained

private void borrarLabel(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrarLabel
    jLabel3.setText("");
}//GEN-LAST:event_borrarLabel
//misma funcion que metodo borrarLabel, pero distinta activacion (presionando tecla Enter)
private void cleanLabel(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleanLabel
    jLabel3.setText("");
}//GEN-LAST:event_cleanLabel

private void iniciarModulo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarModulo
    if (this.getTitle().equals("Acceso a M√≥dulo de Expedientes")) {
        if (!validarModulo(1)) {
            JOptionPane.showMessageDialog(rootPane, "Este usuario no tiene acceso al m√≥dulo √≥ uno de los campos es incorrecto", "Operaci√≥n cancelada", JOptionPane.CANCEL_OPTION);
        } else {
            createMenu(1);
        }
    } else if (this.getTitle().equals("Acceso a M√≥dulo de Audiencias")) {
        if (!validarModulo(2)) {
            JOptionPane.showMessageDialog(rootPane, "Este usuario no tiene acceso al m√≥dulo √≥ uno de los campos es incorrecto", "Operaci√≥n cancelada", JOptionPane.CANCEL_OPTION);
        } else {
            createMenu(2);
        }
    } else if (this.getTitle().equals("Acceso a M√≥dulo de Informaci√≥n")) {
        if (!validarModulo(3)) {
            JOptionPane.showMessageDialog(rootPane, "Este usuario no tiene acceso al m√≥dulo √≥ uno de los campos es incorrecto", "Operaci√≥n cancelada", JOptionPane.CANCEL_OPTION);
        } else {
            createMenu(3);
        }
    } else if (this.getTitle().equals("Acceso de Administrador")) {
        if (!validarModulo(4)) {
            JOptionPane.showMessageDialog(rootPane, "Este usuario no tiene acceso de administrador o uno de los campos es incorrecto", "Operaci√≥n cancelada", JOptionPane.CANCEL_OPTION);
        } else {
            createMenu(4);
        }
    }
}//GEN-LAST:event_iniciarModulo
//este metodo abre ventana para nuevas audiencias
private void iniciarAsistencial(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarAsistencial
    pass = String.valueOf(jPasswordField1.getPassword());
    if (!jTextField1.getText().equals("")) {
        if (!pass.equals("jPasswordField1")) {
            if (!pass.equals("")) {
                if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                    if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                        String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                        String cad[] = per.split(",");
                        if (cad[3].equals("SI")) {
                            this.setCursor(Cursor.WAIT_CURSOR);
                            seleccionarVentana(2);
                        }  else {
                            this.jLabel3.setText("Acceso denegado para este usuario");
                            jButton6.setVisible(true);
                        }
                    } else {
                        jLabel3.setText("Contrase√±a inv√°lida");
                    }
                } else {
                    jLabel3.setText("Nombre de usuario inv√°lido");
                }
                bandera = true;
                jButton1.setSelected(false);
                jButton1.setFocusPainted(false);
            } else {
                jLabel3.setText("Escribir contrase√±a");
            }
        } else {
            jLabel3.setText("Escribir contrase√±a");
        }
    } else {
        jLabel3.setText("Escribir nombre de usuario");
    }
}//GEN-LAST:event_iniciarAsistencial
//el siguiente metodo abre ventana de consultas de audiencias de secretara asistencial
private void iniciarAsistencial2(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarAsistencial2
    pass = String.valueOf(jPasswordField1.getPassword());
    if (!jTextField1.getText().equals("")) {
        if (!pass.equals("jPasswordField1")) {
            if (!pass.equals("")) {
                if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                    if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                        String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                        String cad[] = per.split(",");
                        if (cad[3].equals("SI")) {
                            this.setCursor(Cursor.WAIT_CURSOR);  
                            seleccionarVentana(3);
                        } else {
                            this.jLabel3.setText("Acceso denegado para este usuario");
                            jButton6.setVisible(true);
                        }
                    } else {
                        jLabel3.setText("Contrase√±a inv√°lida");
                    }
                } else {
                    jLabel3.setText("Nombre de usuario inv√°lido");
                }
                bandera = true;
                jButton1.setSelected(false);
                jButton1.setFocusPainted(false);
            } else {
                jLabel3.setText("Escribir contrase√±a");
            }
        } else {
            jLabel3.setText("Escribir contrase√±a");
        }
    } else {
        jLabel3.setText("Escribir nombre de usuario");
    }
}//GEN-LAST:event_iniciarAsistencial2

private void iniciarSecretariaCivil(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarSecretariaCivil
    pass = String.valueOf(jPasswordField1.getPassword());
    if (!jTextField1.getText().equals("")) {
        if (!pass.equals("jPasswordField1")) {
            if (!pass.equals("")) {
                //metodo de bd que envia como parametro usuario y contrase√±a para validar
                if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                    if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                        String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                        String cad[] = per.split(",");
                        if (cad[4].equals("SI")) {
                            this.setCursor(Cursor.WAIT_CURSOR);
                            seleccionarVentana(4);
                        } else {
                            this.jLabel3.setText("Acceso denegado para este usuario");
                            jButton6.setVisible(true);
                        }
                    } else {
                        jLabel3.setText("Contrase√±a inv√°lida");
                    }
                } else {
                    jLabel3.setText("Nombre de usuario inv√°lido");
                }
                bandera = true;
                jButton1.setSelected(false);
                jButton1.setFocusPainted(false);
            } else {
                jLabel3.setText("Escribir contrase√±a");
            }
        } else {
            jLabel3.setText("Escribir contrase√±a");
        }
    } else {
        jLabel3.setText("Escribir nombre de usuario");
    }                                  
}//GEN-LAST:event_iniciarSecretariaCivil

private void cerrarInicio(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarInicio
    this.dispose();
}//GEN-LAST:event_cerrarInicio

    private void seleccionarVentana(int op) {
        switch (op) {
            case 1:
                vistas.Menu menu = new vistas.Menu(mod1, mod2, mod3, admin);
                menu.setVisible(true);
                menu.setLocationRelativeTo(this);
                menu.setExtendedState(MAXIMIZED_BOTH);
                this.dispose();
                break;
            case 2:
                vistas.NuevaAudiencia na = new vistas.NuevaAudiencia(2);
                na.setVisible(true);
                na.setLocationRelativeTo(this);
                this.dispose();
                break;
            case 3:
                vistas.ConsultaAudiencia ca = new vistas.ConsultaAudiencia(2);
                ca.setVisible(true);
                ca.setLocationRelativeTo(this);
                this.dispose();
                break;
            case 4:
                VentanaSecretariaCivil sc = new VentanaSecretariaCivil();
                sc.setVisible(true);
                sc.setLocationRelativeTo(this);
                this.dispose();
                break;
        }
    }
    
    private void createMenu(int op) {
        vistas.Menu menuNuevo;
        switch (op) {
            case 1:
                this.dispose();
                menuNuevo = new vistas.Menu(1, 0, 0, 0);
                menuNuevo.setVisible(true);
                menuNuevo.setExtendedState(MAXIMIZED_BOTH);
                break;
            case 2:
                this.dispose();
                menuNuevo = new vistas.Menu(0, 1, 0, 0);
                menuNuevo.setVisible(true);
                menuNuevo.setExtendedState(MAXIMIZED_BOTH);
                break;
            case 3:
                this.dispose();
                menuNuevo = new vistas.Menu(0, 0, 1, 0);
                menuNuevo.setVisible(true);
                menuNuevo.setExtendedState(MAXIMIZED_BOTH);
                break;
            case 4:
                this.dispose();
                menuNuevo = new vistas.Menu(1, 1, 1, 1);
                menuNuevo.setVisible(true);
                menuNuevo.setExtendedState(MAXIMIZED_BOTH);
                break;
        }
    }

    public boolean validarModulo(int mod) {
        boolean f = false;
        pass = String.valueOf(jPasswordField1.getPassword());
        switch (mod) {
            case 1:
                if (!jTextField1.getText().equals("")) {
                    if (!pass.equals("jPasswordField1")) {
                        if (!pass.equals("")) {
                            if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                                if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                                    String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                                    String cad[] = per.split(",");
                                    if (cad[0].equals("Si")) {
                                        f = true;
                                    }
                                } else {
                                    jLabel3.setText("Contrase√±a inv√°lida");
                                }
                            } else {
                                jLabel3.setText("Nombre de usuario inv√°lido");
                            }
                        }
                    }
                }
                break;
            case 2:
                if (!jTextField1.getText().equals("")) {
                    if (!pass.equals("jPasswordField1")) {
                        if (!pass.equals("")) {
                            if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                                if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                                    String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                                    String cad[] = per.split(",");
                                    if (cad[1].equals("Si")) {
                                        f = true;
                                    }
                                } else {
                                    jLabel3.setText("Contrase√±a inv√°lida");
                                }
                            } else {
                                jLabel3.setText("Nombre de usuario inv√°lido");
                            }
                        }
                    }
                }
                break;
            case 3:
                if (!jTextField1.getText().equals("")) {
                    if (!pass.equals("jPasswordField1")) {
                        if (!pass.equals("")) {
                            if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                                if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                                    String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                                    String cad[] = per.split(",");
                                    if (cad[2].equals("Si")) {
                                        f = true;
                                    }
                                } else {
                                    jLabel3.setText("Contrase√±a inv√°lida");
                                }
                            } else {
                                jLabel3.setText("Nombre de usuario inv√°lido");
                            }
                        }
                    }
                }
                break;
            case 4:
                if (!jTextField1.getText().equals("")) {
                    if (!pass.equals("jPasswordField1")) {
                        if (!pass.equals("")) {
                            if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                                if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                                    String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                                    String cad[] = per.split(",");
                                    if (cad[0].equals("Si")) {
                                        f = true;
                                    } else {
                                        f = false;
                                    }
                                    if (cad[1].equals("Si")) {
                                        f = true;
                                    } else {
                                        f = false;
                                    }
                                    if (cad[2].equals("Si")) {
                                        f = true;
                                    } else {
                                        f = false;
                                    }
                                } else {
                                    jLabel3.setText("Contrase√±a inv√°lida");
                                }
                            } else {
                                jLabel3.setText("Nombre de usuario inv√°lido");
                            }
                        }
                    }
                }
                break;
        }
        return f;
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    public javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        this.setIconImage (new ImageIcon(getClass().getResource("/iconos/iconos16px/icon_16.png")).getImage());
        jPasswordField1.setForeground(Color.GRAY);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        jButton5.setVisible(false);
        jButton6.setVisible(false);
        this.setLocationRelativeTo(this);
    }

    private void validarInicioSesion() {
        pass = String.valueOf(jPasswordField1.getPassword());
        if (!jTextField1.getText().equals("")) {
            if (!pass.equals("jPasswordField1")) {
                if (!pass.equals("")) {
                    if (usuarioFacade.validarUsuario(jTextField1.getText())) {
                        if (usuarioFacade.validarPassword(jTextField1.getText(), pass)) {
                            String per = usuarioFacade.validarPermisos(jTextField1.getText(), pass);
                            String cad[] = per.split(",");
                            if (cad[0].equals("Si")) {
                                mod1 = 1;
                            } else {
                                mod1 = 0;
                            }
                            if (cad[1].equals("Si")) {
                                mod2 = 1;
                            } else {
                                mod2 = 0;
                            }
                            if (cad[2].equals("Si")) {
                                mod3 = 1;
                            } else {
                                mod3 = 0;
                            }
                            if (cad[0].equals("Si") && cad[1].equals("Si") && cad[2].equals("Si")) {
                                admin = 1;
                            } else {
                                admin = 0;
                            }
                            this.setCursor(Cursor.WAIT_CURSOR);
                            seleccionarVentana(1);
                        } else {
                            jLabel3.setText("Contrase√±a inv√°lida");
                        }
                    } else {
                        jLabel3.setText("Nombre de usuario inv√°lido");
                    }
                    bandera = true;
                    jButton1.setSelected(false);
                    jButton1.setFocusPainted(false);
                } else {
                    jLabel3.setText("Escribir contrase√±a");
                }
            } else {
                jLabel3.setText("Escribir contrase√±a");
            }
        } else {
            jLabel3.setText("Escribir nombre de usuario");
        }
    }
}
